apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

Properties signingProperties = new Properties()
signingProperties.load(new FileInputStream(file("../signings/signing.properties")))

task copyAlgorithmFiles() {
  def srcDir = '../app/src/main/java/com/sunfusheng/codeviewer/sample/MainActivity.kt'
  def destDir = '../app/src/main/assets/source_code/'

  delete destDir

  copy {
    from srcDir
    into destDir
  }
}

android {
  compileSdkVersion 31
  defaultConfig {
    applicationId "com.sunfusheng.codeviewer.sample"
    minSdkVersion 19
    targetSdkVersion 31
    versionCode 1
    versionName "1.0.0"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  buildFeatures {
    viewBinding true
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  signingConfigs {
    release {
      storeFile file(signingProperties['KEYSTORE_FILEPATH'])
      storePassword signingProperties['STORE_PASSWORD']
      keyAlias signingProperties['KEY_ALIAS']
      keyPassword signingProperties['KEY_PASSWORD']
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    release {
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      applicationVariants.all { variant ->
        variant.outputs.all {
          outputFileName = "CodeViewer.apk"
        }
      }
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation 'androidx.core:core-ktx:1.7.0'
  implementation 'androidx.appcompat:appcompat:1.4.1'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

  implementation project(':code-viewer')
}
